<launch>

<arg name="offline" default="true" doc="mapping from an offline (rosbag) dataset or online (live) data?"/>
<arg name="usb_cam" default="true" doc="launch usb cam"/>
<arg name="oflow" default="false" doc="compute oflow iff online"/>
<arg name="oflow_plot" default="true" doc="plot oflow vs gamma data along time"/>
<arg name="nearness" default="false" doc="compute nearness"/>
<arg name="lidar" default="true" doc="launch lidar"/>

<!-- For "online" mapping (not from a rosbag) -->
<group unless="$(arg offline)">
  <include if="$(arg usb_cam)" file="$(find usb_cam)/launch/usb_cam-test.launch" />

  <node if="$(arg oflow)" name="optic_flow_node" pkg="optic_flow_node" type="wide_field_optic_flow_node" output="screen" >
      <param name="image_center_x" value="320"/>
      <param name="image_center_y" value="240"/>
      <param name="inner_ring_radius" value="220"/>
      <param name="ring_dr" value="10"/>
      <param name="num_ring_points" value="160"/>
      <param name="num_rings" value="5"/>
      <param name="pixel_scale" value="215"/>
  </node>

  <include file="$(find goggles)/launch/goggles.launch" />
  <include file="$(find imu_filter_madgwick)/launch/imu.launch" />

  <node if="$(arg nearness)" name="simple_nearness" pkg="nearness_estimation" type="simple_nearness_node" output="screen" >
  	<param name="num_ring_points" value="160"/>
  </node>

  <include if="$(arg lidar)" file="$(find rplidar_ros)/launch/rplidar_s1.launch" />
</group>

<!-- For "offline" oflow and/or nearness (from a rosbag) -->
<group if="$(arg offline)">

  <node name="optic_flow_node" pkg="optic_flow_node" type="wide_field_optic_flow_node" output="screen" >
      <param name="image_center_x" value="320"/>
      <param name="image_center_y" value="240"/>
      <param name="inner_ring_radius" value="220"/>
      <param name="ring_dr" value="10"/>
      <param name="num_ring_points" value="160"/>
      <param name="num_rings" value="5"/>
      <param name="pixel_scale" value="215"/>
  </node>

  <node if="$(arg nearness)" name="simple_nearness" pkg="nearness_estimation" type="simple_nearness_node" output="screen" >
  	   <param name="num_ring_points" value="160"/>
  </node>

  <node if="$(arg oflow_plot)" pkg="optic_flow_node" name="oflow_visualizer" type="oflow_visualizer.py" output="screen"/>

</group>


</launch>
